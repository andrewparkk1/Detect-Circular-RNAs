# Find high-throughput sequencing data. Requirements: 2 samples of both RNA-seq and Ribo-seq
# https://www.ncbi.nlm.nih.gov/geo/
# Download data using SRA Toolkit
prefetch SRR######
fastq-dump --split-files SRR###### --outdir rna-data 
fastq-dump SRR###### --outdir ribo-data

# Run FastQC and MultiQC to for quality check
./fastqc SRR###### --outdir=/fastqc-folder
multiqc fastqc-folder

# Download Ensemble Mouse/Human FASTA (.fa) and GTF (.gtf)
wget http://ftp.ensembl.org/pub/release-104/fasta/mus_musculus/dna/Mus_musculus.GRCm39.dna.primary_assembly.fa.gz
wget http://ftp.ensembl.org/pub/release-104/gtf/mus_musculus/Mus_musculus.GRCm39.104.chr.gtf.gz

# Create genome index
# http://useast.ensembl.org/Mus_musculus/Info/Index
mkdir mus-genome-index
STAR --runThreadN 64 --runMode genomeGenerate --genomeDir mus-genome-index --genomeFastaFiles Mus_musculus.GRCm39.dna.primary_assembly.fa --sjdbGTFfile Mus_musculus.GRCm39.104.chr.gtf --sjdbOverhang 100 --genomeChrBinNbits 15

# Detect circRNAs
mkdir mus-seekCRIT-output
python3 seekCRIT.py -o mus-seekCRIT-output -t PE -fa Mus_musculus.GRCm39.dna.primary_assembly.fa --genomeIndex mus-genome-index -s1 wt1_R1.fastq:wt1_R2.fastq,wt2_R1.fastq:wt2_R2.fastq,wt3_R1.fastq:wt3_R2.fastq -s2 mettl1_R1.fastq:mettl1_R2.fastq,mettl2_R1.fastq:mettl2_R2.fastq,mettl3_R1.fastq:mettl3_R2.fastq -gtf Mus_musculus.GRCm39.104.chr.gtf --threadNumber 32

# Create bed file to get sequence 
awk -F "\t" 'OFS="\t" {print $1,$2,$3,$10,"0",$4}' circRNAs.pVal.FDR.txt > circRNA.bed

# Delete first line of circRNA.bed
sed -i '1d' circRNA.bed

# Use bedtools to retrieve exon sequence of circRNA
bedtools getfasta -s -fi Mus_musculus.GRCm39.dna.primary_assembly.fa -bed circRNA.bed > sequence.txt

# Create 100bp-sequence per circRNA using sequence.txt. Output to sequenced-circRNA.fa
python 100bp.py > 100bp-circRNA.fa

# Create index for circRNAs using the seekCRIT output
mkdir circ-genome-index
STAR --runThreadN 8 --runMode genomeGenerate --genomeDir circ-genome-index --genomeFastaFiles 100bp-circRNA.fa

# Obtain tRNA and rRNA data
https://rnacentral.org/
http://gtrnadb.ucsc.edu/genomes/eukaryota/Mmusc39/Mmusc39-seq.html
mkdir tRNA-genome-index and rRNA-genome-index
STAR --runThreadN 8 --runMode genomeGenerate --genomeDir trna-genome-index --genomeFastaFiles trna.fasta --genomeSAindexNbases 6
STAR --runThreadN 8 --runMode genomeGenerate --genomeDir rrna-genome-index --genomeFastaFiles rrna.fasta --genomeSAindexNbases 6

# Trim Ribo-seq of its adaptor sequences using Trim Galore
# May need to install cut_adaptor separately
# leave everything less than 40bp
trim_galore wt1-ribo.fastq

# Run FastQC on TRIMMED Ribo-seq
./fastqc wt1-ribo_trimmed.fq

# Map riboseq to tRNA, rRNA, chr, circular
# Make sure the unmapped reads have separate output

# Map ribo to trna genome index
STAR --runThreadN 8 --genomeDir /home/a0park07/trna-rrna/trna-genome-index --outSAMunmapped Within --outReadsUnmapped Fastx --outFileNamePrefix trna-wt1- --readFilesIn /home/a0park07/ncbi/public/sra/trim-galore-results/trimmed-fastq-files/wt1-r1-ribo_trimmed.fq

# Map unmapped-trna-genome to rrna genome index
STAR --runThreadN 32 --genomeDir rRNA-genome-index --alignEndsType EndToEnd --outSAMunmapped Within --outReadsUnmapped Fastx --outFileNamePrefix tRNA- --readFilesIn tRNA-wt1-unmapped.fa

# Map unmapped-rrna-trna-genome to mouse genome index
STAR --runThreadN 32 --genomeDir mouse-genome-index --alignEndsType EndToEnd --outSAMunmapped Within --outReadsUnmapped Fastx --outFileNamePrefix tRNA- --readFilesIn <unmapped rRNA fastq>

# Map unmapped-chr-rrna-trna-genome to circularRNA index
STAR --runThreadN 32 --genomeDir circular-genome-index --alignEndsType EndToEnd --outFileNamePrefix circular --readFilesIn <unmapped chr fastq>



Dependencies
module load sratoolkit_2.9.0
module load python-3.5.2
module load star-2.5
module load trim_galore
module load cut_adapt
git clone https://github.com/UofLBioinformatics/seekCRIT.git //need to follow setup directions for seekcrit
bedtools
    brew tap homebrew/science
    brew install bedtools
cutadapt . python3 -m pip install --user --upgrade cutadapt. https://cutadapt.readthedocs.io/en/stable/installation.html#installation-with-pip
trimgalore. https://github.com/FelixKrueger/TrimGalore

# #creating shorter files
# for FILE in $dir1/data/sra/*; do
#   f=$(basename $FILE)
#   $(head -n 20 $FILE > $dir1/data/sra/short-$f)
# done